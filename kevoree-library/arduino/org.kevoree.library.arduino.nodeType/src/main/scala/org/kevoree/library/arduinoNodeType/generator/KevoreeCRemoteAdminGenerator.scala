package org.kevoree.library.arduinoNodeType.generator

trait KevoreeCRemoteAdminGenerator extends KevoreeCAbstractGenerator {

  def generateCheckForAdminMsg() {
    /*
    context b "//ARDUINO SERIAL INPUT READ "
    context b "#define BUFFERSIZE 100      "
    context b "int serialIndex = 0;        "
    context b "char inBytes[BUFFERSIZE];   "
    context b "void checkForAdminMsg(){     "
    context b "  if(Serial.available()>0 && serialIndex < BUFFERSIZE) { "
    context b "    inBytes[serialIndex] = Serial.read();                 "
    context b "    if (inBytes[serialIndex] == '\\n' || inBytes[serialIndex] == ';') {  "
    context b "              inBytes[serialIndex] = '\0';  "
    context b "              parseForAdminMsg();                "
    context b "               for(int i=0;i<serialIndex;i++){   "
    context b "                    inBytes[serialIndex];       "
    context b "                }                               "
    context b "                serialIndex = 0;                "
    context b "               Serial.println(freeRam());        "
    context b "    } else {      "
    context b "      serialIndex++;   "
    context b "    }       "
    context b "  }          "
    context b "  if(serialIndex >= BUFFERSIZE){   "
    context b "    Serial.println(\"Buffer overflow\");  "
    context b "      for(int i=0;i<serialIndex;i++){   "
    context b "          inBytes[serialIndex];         "
    context b "      }                                "
    context b "      serialIndex = 0;                "
    context b "  }                                   "
    context b "}                                    "
    */


    context b "//ARDUINO SERIAL INPUT READ                                       "
    context b "#define BUFFERSIZE 100                                            "
    context b "int serialIndex = 0;                                              "
    context b "char inBytes[BUFFERSIZE];                                         "
    context b "const char startBAdminChar = '{';                                 "
    context b "const char endAdminChar = '}';                                    "
    context b "const char startAdminChar = '$';                                  "
    context b "const char sepAdminChar = '/';                                    "
    context b "char ackToken;                                                    "
    context b "boolean parsingAdmin = false;                                     "

    context b "int eepromPreviousIndex;                                              "
    context b "boolean firstAdd ;                                                    "
    context b "unsigned long timeBeforeScript;"


    context b "    void checkForAdminMsg () {                                                      "
    context b "      if (Serial.peek() == startAdminChar) {                                        "
    context b "        timeBeforeScript = millis();"
    context b "        Serial.read(); //DROP ADMIN START CHAR                                      "
    context b "        while (!Serial.available() > 0) {                                           "
    context b "          delay(10);                                                                "
    context b "        }                                                                           "
    context b "        ackToken = Serial.read();                                                   "
    context b "        while (!Serial.available() > 0) {                                           "
    context b "          delay(10);                                                                "
    context b "        }                                                                            "
    context b "        if (Serial.read() == startBAdminChar) {                                      "
    context b "          parsingAdmin = true;                                                       "
    context b "          eepromPreviousIndex = eepromIndex;                                         "
    context b "          eepromIndex ++;                                                            "
    context b "          firstAdd = true;                                                           "
    context b "          while (parsingAdmin) {                                                     "
    context b "            if (Serial.available() > 0 && serialIndex < BUFFERSIZE) {                "
    context b "              inBytes[serialIndex] = Serial.read();                                  "
    context b "              if (inBytes[serialIndex] == sepAdminChar) {                            "
    context b "                inBytes[serialIndex] = '\\0';                                         "
    context b "                //saveScriptCommand();                                               "
    context b "                if (!firstAdd) {                                                     "
    context b "                  save2Memory(sepAdminChar);           "
    context b "                }                                                                    "
    context b "                parseAndSaveAdminMsg();                                              "
    context b "                flushAdminBuffer();                                                  "
    context b "                firstAdd = false;                                                    "
    context b "              } else {                                                               "
    context b "                if (inBytes[serialIndex] == endAdminChar) {                          "
    context b "                  parsingAdmin = false;                                              "
    context b "                  inBytes[serialIndex] = '\\0';                                       "
    context b "                  //saveScriptCommand();                                             "
    context b "                                                                                     "
    context b "                  if (!firstAdd) {                                                   "
    context b "                    save2Memory(sepAdminChar);         "
    context b "                  }                                                                  "
    context b "                  parseAndSaveAdminMsg();                                            "
    context b "                  flushAdminBuffer();                                                "

    context b "          //DO COMPLEX CODE ;-)                                                      "
    context b "          EEPROM.write(eepromIndex, endAdminChar);                                   "
    context b "          eepromIndex = eepromPreviousIndex + 1;                                     "
    context b "          executeScriptFromEEPROM();                                                 "
    context b "                                                                                     "
    context b "          EEPROM.write(eepromPreviousIndex, sepAdminChar); //CLOSE TRANSACTION       "

    //COMPRESS EEPROM IF NECESSARY , DON'T GO TO LIMIT
    context b "          if(eepromIndex > (EEPROM_MAX_SIZE-100)){        "
    context b "            compressEEPROM();            "
    context b "          }                              "



    context b "                  Serial.print(\"ms\");                                                 "
    context b "                  Serial.println( millis() - timeBeforeScript );                      "
    context b "                  Serial.print(\"mem\");                                                "
    context b "                  Serial.println(freeRam());                                         "
    context b "                  Serial.print(\"emem\");                                                "
    context b "                  Serial.println(eepromIndex);                                         "
    context b "                  Serial.print(\"ack\");                                               "
    context b "                  Serial.println(ackToken);                                          "
    context b "                  firstAdd = false;                                                  "
    context b "                } else {                                                             "
    context b "                  serialIndex ++;                                                    "
    context b "                }                                                                    "
    context b "              }                                                                       "
    context b "            }                                                                        "
    context b "            if (serialIndex >= BUFFERSIZE) {                                         "
    context b "              Serial.println(\"BFO\");                                                 "
    context b "              flushAdminBuffer();                                                    "
    context b "              Serial.flush();                                                        "
    context b "              parsingAdmin = false; //KILL PARSING ADMIN                             "
    context b "            }                                                                        "
    context b "          }                                                                          "

    context b "                                                                                     "
    context b "        } else {                                                                     "
    context b "          Serial.println(\"BAM\");                                                      "
    context b "          flushAdminBuffer();                                                         "
    context b "          Serial.flush();                                                             "
    context b "        }                                                                             "
    context b "      }                                                                               "
    context b "    }                                                                                 "




    /*
context b "void checkForAdminMsg(){                                          "
context b "  if(Serial.peek() == startAdminChar){                            "
context b "    Serial.read();//DROP ADMIN START CHAR                         "
context b "    while(!Serial.available()>0){delay(10);}                      "
context b "    ackToken = Serial.read();                                     "
context b "    while(!Serial.available()>0){delay(10);}                      "
context b "    if(Serial.read() == startBAdminChar){                         "
context b "      parsingAdmin = true;                                        "
context b "      while(parsingAdmin){                                        "
context b "        if(Serial.available()>0 && serialIndex < BUFFERSIZE) {    "
context b "            inBytes[serialIndex] = Serial.read();                 "
context b "            if(inBytes[serialIndex] == sepAdminChar){             "
context b "                inBytes[serialIndex] = '\\0';                      "
context b "                saveScriptCommand();parseForAdminMsg();                               "
context b "                flushAdminBuffer();                               "
context b "            } else {                                              "
context b "              if(inBytes[serialIndex] == endAdminChar){           "
context b "                 parsingAdmin = false;                            "
context b "                 inBytes[serialIndex] = '\\0';                     "
context b "                 saveScriptCommand();parseForAdminMsg();                              "
context b "                 flushAdminBuffer();                              "
context b "                 Serial.print(\"ack\");                             "
context b "                 Serial.println(ackToken);                        "
context b "                 Serial.println(freeRam());"
context b "              } else {                                            "
context b "                serialIndex++;                                    "
context b "              }                                                   "
context b "            }                                                     "
context b "        }                                                         "
context b "        if(serialIndex >= BUFFERSIZE){                            "
context b "          Serial.println(\"BFO\");  "
context b "          flushAdminBuffer();                                     "
context b "          Serial.flush();                                         "
context b "          parsingAdmin=false;//KILL PARSING ADMIN                 "
context b "        }                                                         "
context b "      }                                                           "
context b "  } else {                                                        "
context b "          Serial.println(\"BAM\");                  "
context b "          flushAdminBuffer();                                     "
context b "          Serial.flush();                                         "
context b "  }                                                               "
context b "}                                                                 "
context b "}                                                                 "
*/
    context b "void flushAdminBuffer(){                                          "
    context b "  for(int i=0;i<serialIndex;i++){                                 "
    context b "     inBytes[serialIndex];                                        "
    context b "  }                                                               "
    context b "  serialIndex = 0;                                                "
    context b "}                                                                 "
    context b "//END SECTION ADMIN DETECTION 1 SPLIT                             "
    /*
context b "int eepromIndex;                                                                "
context b "void saveScriptCommand(){                                                       "
context b "  if(eepromIndex == 2){ EEPROM.write(eepromIndex,startBAdminChar);eepromIndex++;}"
context b "  if(eepromIndex+serialIndex+1 < 512){                                          "
context b "    EEPROM.write(eepromIndex,sepAdminChar);eepromIndex++;                       "
context b "    for(int i=0;i<serialIndex;i++){                                             "
context b "      EEPROM.write(eepromIndex,inBytes[i]);                                     "
context b "      eepromIndex++;                                                            "
context b "    }                                                                           "
context b "    EEPROM.write(eepromIndex,endAdminChar);                                     "
context b "  } else {                                                                      "
context b "    Serial.println(\"OME\");                                                      "
context b "  }                                                                             "
context b "}                                                                               "

    */
  }

  def generateConcatKevscriptParser(): Unit = {
    context b "char * insID;  "
    context b "char * typeID; "
    context b "char * params;   "
    context b "char * chID;        "
    context b "char * portID;            "
    context b "const char delims[] = \":\";    "
    context b "boolean parseAndSaveAdminMsg(){       "
    context b "  if(serialIndex < 6){return false;}    "

    /*
    context b "if( inBytes[2]=='r' && inBytes[3]=='s' && inBytes[4]=='t' ){//SOFTWARE RESET "
    //context b "   cli();wdt_enable(WDTO_15MS);                                    "
    //context b "   while(1) {};                                              "
    context b " }                                                           "
      */

    context b "    if( inBytes[0]=='p' && inBytes[1]=='i' && inBytes[2]=='n' && inBytes[3]=='g' ){  "

    context b "      return true;      "
    context b "    }   "

    context b "    if( inBytes[0]=='u' && inBytes[1]=='d' && inBytes[2]=='i' && inBytes[3]==':' ){  "
    context b "      insID = strtok(&inBytes[4], delims);  "
    context b "      params = strtok(NULL, delims);    "

    context b "      saveUDI_CMD(insID,params);      "

    context b "      return true;      "
    context b "    }   "



    context b "    if( inBytes[0]=='a' && inBytes[1]=='i' && inBytes[2]=='n' && inBytes[3]==':' ){ "
    context b "      insID = strtok(&inBytes[4], delims); "
    context b "      typeID = strtok(NULL, delims);"
    context b "      params = strtok(NULL, delims); "
    context b "      saveAIN_CMD(insID,getIDFromType(typeID),params);"
    context b "      return true;"
    context b "    }      "
    context b "    if( inBytes[0]=='r' && inBytes[1]=='i' && inBytes[2]=='n' && inBytes[3]==':' ){    "
    context b "      insID = strtok(&inBytes[4], delims);   "

    context b "       saveRIN_CMD(insID);"


    context b "      return true;   "
    context b "    }               "
    context b "    if( inBytes[0]=='a' && inBytes[1]=='b' && inBytes[2]=='i' && inBytes[3]==':' ){      "
    context b "      insID = strtok(&inBytes[4], delims);                                               "
    context b "      chID = strtok(NULL, delims);                                                       "
    context b "      portID = strtok(NULL, delims);                                                     "
    context b "      saveBI_CMD(true,insID,chID,getIDFromPortName(portID));                             "

    context b "      return true;                                                                            "
    context b "    }                                                                                         "
    context b "    if( inBytes[0]=='r' && inBytes[1]=='b' && inBytes[2]=='i' && inBytes[3]==':' ){           "
    context b "      insID = strtok(&inBytes[4], delims);                                                    "
    context b "      chID = strtok(NULL, delims);                                                            "
    context b "      portID = strtok(NULL, delims);                                                          "
    context b "      saveBI_CMD(false,insID,chID,getIDFromPortName(portID));                             "

    context b "      return true;                                                                            "
    context b "    }                                                                                         "
    // context b "  }                                                                                           "
    context b "  return false;                                                                               "
    context b "}                                                                                             "
  }
}